// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/MsgRoom.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace QiLieGuaner {

  /// <summary>Holder for reflection information generated from Proto/MsgRoom.proto</summary>
  public static partial class MsgRoomReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/MsgRoom.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgRoomReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNQcm90by9Nc2dSb29tLnByb3RvEgtRaUxpZUd1YW5lciKMAQoRQ3JlYXRl",
            "Um9vbVJlcXVlc3QSEgoKcGxheWVyR1VJRBgBIAEoBRIQCghyb29tTmFtZRgC",
            "IAEoCRIUCgxyb29tUGFzc3dvcmQYAyABKAkSKQoKZ2FtZVR5cGVJRBgEIAEo",
            "DjIVLlFpTGllR3VhbmVyLkdhbWVUeXBlEhAKCGdhbWVSdWxlGAUgASgJIlgK",
            "EUNyZWF0ZVJvb21SZWNlaXZlEg0KBXN0YXRlGAEgASgFEhIKCnBsYXllckdV",
            "SUQYAiABKAUSEAoIcm9vbU5hbWUYAyABKAkSDgoGcm9vbUlEGAQgASgJIk4K",
            "D1Jvb21MaXN0UmVxdWVzdBISCgpwbGF5ZXJHVUlEGAEgASgFEicKCGdhbWVU",
            "eXBlGAIgASgOMhUuUWlMaWVHdWFuZXIuR2FtZVR5cGUifQoPUm9vbUxpc3RS",
            "ZWNlaXZlEhIKCnBsYXllckdVSUQYASABKAUSFAoMcm9vbUluZm9MaXN0GAIg",
            "AygJEhcKD3Jvb21IYXNMb2NrTGlzdBgDIAMoCBInCghnYW1lVHlwZRgEIAEo",
            "DjIVLlFpTGllR3VhbmVyLkdhbWVUeXBlIksKD0pvaW5Sb29tUmVxdWVzdBIS",
            "CgpwbGF5ZXJHVUlEGAEgASgFEg4KBnJvb21JRBgCIAEoCRIUCgxyb29tUGFz",
            "c3dvcmQYAyABKAkitAEKD0pvaW5Sb29tUmVjZWl2ZRINCgVzdGF0ZRgBIAEo",
            "BRIpCgpnYW1lVHlwZUlEGAIgASgOMhUuUWlMaWVHdWFuZXIuR2FtZVR5cGUS",
            "DgoGcm9vbUlEGAMgASgJEhAKCHJvb21OYW1lGAQgASgJEhQKDHBsYXllckFt",
            "b3VudBgFIAEoBRIVCg1wbGF5ZXJDaGFpcklEGAYgASgFEhgKEG91dENhcmRD",
            "b3VudGRvd24YByABKAUiNQoPUXVpdFJvb21SZXF1ZXN0EhIKCnBsYXllckdV",
            "SUQYASABKAUSDgoGcm9vbUlEGAIgASgJImEKD1F1aXRSb29tUmVjZWl2ZRIN",
            "CgVzdGF0ZRgBIAEoBRISCgpwbGF5ZXJHVUlEGAIgASgFEisKDHJvb21HYW1l",
            "VHlwZRgDIAEoDjIVLlFpTGllR3VhbmVyLkdhbWVUeXBlIkAKGk90aGVyUGxh",
            "eWVySm9pblJvb21SZXF1ZXN0EhIKCnBsYXllckdVSUQYASABKAUSDgoGcm9v",
            "bUlEGAIgASgJIrEBChpPdGhlclBsYXllckpvaW5Sb29tUmVjZWl2ZRISCgpw",
            "bGF5ZXJOYW1lGAEgASgJEhIKCnBsYXllckdVSUQYAiABKAUSEgoKYXZhdGFy",
            "TmFtZRgDIAEoCRITCgtwbGF5ZXJTY29yZRgEIAEoBRIVCg1wbGF5ZXJDaGFp",
            "cklEGAUgASgFEisKDHJvb21HYW1lVHlwZRgGIAEoDjIVLlFpTGllR3VhbmVy",
            "LkdhbWVUeXBlIhwKGk90aGVyUGxheWVyUXVpdFJvb21SZXF1ZXN0Im4KGk90",
            "aGVyUGxheWVyUXVpdFJvb21SZWNlaXZlEg8KB2NoYWlySUQYASABKAUSEgoK",
            "cGxheWVyR1VJRBgCIAEoBRIrCgxyb29tR2FtZVR5cGUYAyABKA4yFS5RaUxp",
            "ZUd1YW5lci5HYW1lVHlwZSIqChRRdWlja0pvaW5Sb29tUmVxdWVzdBISCgpw",
            "bGF5ZXJHVUlEGAEgASgFIiUKFFF1aWNrSm9pblJvb21SZWNlaXZlEg0KBXN0",
            "YXRlGAEgASgFIiIKDFJlYWR5UmVxdWVzdBISCgpwbGF5ZXJHVUlEGAEgASgF",
            "IkoKDFJlYWR5UmVjZWl2ZRINCgVzdGF0ZRgBIAEoBRIrCgxyb29tR2FtZVR5",
            "cGUYAiABKA4yFS5RaUxpZUd1YW5lci5HYW1lVHlwZSIoChJDYW5jZWxSZWFk",
            "eVJlcXVlc3QSEgoKcGxheWVyR1VJRBgBIAEoBSJQChJDYW5jZWxSZWFkeVJl",
            "Y2VpdmUSDQoFc3RhdGUYASABKAUSKwoMcm9vbUdhbWVUeXBlGAIgASgOMhUu",
            "UWlMaWVHdWFuZXIuR2FtZVR5cGUiEgoQU3RhcnRHYW1lUmVxdWVzdCJkChBT",
            "dGFydEdhbWVSZWNlaXZlEgwKBHRpbWUYASABKAMSFQoNc3RhcnRHYW1lSW5m",
            "bxgCIAEoCRIrCgxyb29tR2FtZVR5cGUYAyABKA4yFS5RaUxpZUd1YW5lci5H",
            "YW1lVHlwZSIRCg9HYW1lT3ZlclJlcXVlc3Qi4AEKD0dhbWVPdmVyUmVjZWl2",
            "ZRIRCgl3aW5QbGF5ZXIYASABKAUSEAoIcm9vbU5hbWUYAiABKAkSDgoGcm9v",
            "bUlEGAMgASgJEgwKBHRpbWUYBCABKAMSEwoLcGxheWVyQ291bnQYBSABKAUS",
            "FgoOcGxheWVyTmFtZUxpc3QYBiADKAkSFAoMcGxheWVySURMaXN0GAcgAygF",
            "EhoKEmNoYW5nZUdvbGRDb2luTGlzdBgIIAMoBRIrCgxyb29tR2FtZVR5cGUY",
            "CSABKA4yFS5RaUxpZUd1YW5lci5HYW1lVHlwZSIZChdPdGhlclBsYXllclJl",
            "YWR5UmVxdWVzdCJrChdPdGhlclBsYXllclJlYWR5UmVjZWl2ZRISCgpwbGF5",
            "ZXJHVUlEGAEgASgFEg8KB2NoYWlySUQYAiABKAUSKwoMcm9vbUdhbWVUeXBl",
            "GAMgASgOMhUuUWlMaWVHdWFuZXIuR2FtZVR5cGUiHwodT3RoZXJQbGF5ZXJD",
            "YW5jZWxSZWFkeVJlcXVlc3QicQodT3RoZXJQbGF5ZXJDYW5jZWxSZWFkeVJl",
            "Y2VpdmUSEgoKcGxheWVyR1VJRBgBIAEoBRIPCgdjaGFpcklEGAIgASgFEisK",
            "DHJvb21HYW1lVHlwZRgDIAEoDjIVLlFpTGllR3VhbmVyLkdhbWVUeXBlKiAK",
            "CEdhbWVUeXBlEgcKA1VOTxAAEgsKB090aGVsbG8QAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::QiLieGuaner.GameType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.CreateRoomRequest), global::QiLieGuaner.CreateRoomRequest.Parser, new[]{ "PlayerGUID", "RoomName", "RoomPassword", "GameTypeID", "GameRule" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.CreateRoomReceive), global::QiLieGuaner.CreateRoomReceive.Parser, new[]{ "State", "PlayerGUID", "RoomName", "RoomID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.RoomListRequest), global::QiLieGuaner.RoomListRequest.Parser, new[]{ "PlayerGUID", "GameType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.RoomListReceive), global::QiLieGuaner.RoomListReceive.Parser, new[]{ "PlayerGUID", "RoomInfoList", "RoomHasLockList", "GameType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.JoinRoomRequest), global::QiLieGuaner.JoinRoomRequest.Parser, new[]{ "PlayerGUID", "RoomID", "RoomPassword" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.JoinRoomReceive), global::QiLieGuaner.JoinRoomReceive.Parser, new[]{ "State", "GameTypeID", "RoomID", "RoomName", "PlayerAmount", "PlayerChairID", "OutCardCountdown" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.QuitRoomRequest), global::QiLieGuaner.QuitRoomRequest.Parser, new[]{ "PlayerGUID", "RoomID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.QuitRoomReceive), global::QiLieGuaner.QuitRoomReceive.Parser, new[]{ "State", "PlayerGUID", "RoomGameType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.OtherPlayerJoinRoomRequest), global::QiLieGuaner.OtherPlayerJoinRoomRequest.Parser, new[]{ "PlayerGUID", "RoomID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.OtherPlayerJoinRoomReceive), global::QiLieGuaner.OtherPlayerJoinRoomReceive.Parser, new[]{ "PlayerName", "PlayerGUID", "AvatarName", "PlayerScore", "PlayerChairID", "RoomGameType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.OtherPlayerQuitRoomRequest), global::QiLieGuaner.OtherPlayerQuitRoomRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.OtherPlayerQuitRoomReceive), global::QiLieGuaner.OtherPlayerQuitRoomReceive.Parser, new[]{ "ChairID", "PlayerGUID", "RoomGameType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.QuickJoinRoomRequest), global::QiLieGuaner.QuickJoinRoomRequest.Parser, new[]{ "PlayerGUID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.QuickJoinRoomReceive), global::QiLieGuaner.QuickJoinRoomReceive.Parser, new[]{ "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.ReadyRequest), global::QiLieGuaner.ReadyRequest.Parser, new[]{ "PlayerGUID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.ReadyReceive), global::QiLieGuaner.ReadyReceive.Parser, new[]{ "State", "RoomGameType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.CancelReadyRequest), global::QiLieGuaner.CancelReadyRequest.Parser, new[]{ "PlayerGUID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.CancelReadyReceive), global::QiLieGuaner.CancelReadyReceive.Parser, new[]{ "State", "RoomGameType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.StartGameRequest), global::QiLieGuaner.StartGameRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.StartGameReceive), global::QiLieGuaner.StartGameReceive.Parser, new[]{ "Time", "StartGameInfo", "RoomGameType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.GameOverRequest), global::QiLieGuaner.GameOverRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.GameOverReceive), global::QiLieGuaner.GameOverReceive.Parser, new[]{ "WinPlayer", "RoomName", "RoomID", "Time", "PlayerCount", "PlayerNameList", "PlayerIDList", "ChangeGoldCoinList", "RoomGameType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.OtherPlayerReadyRequest), global::QiLieGuaner.OtherPlayerReadyRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.OtherPlayerReadyReceive), global::QiLieGuaner.OtherPlayerReadyReceive.Parser, new[]{ "PlayerGUID", "ChairID", "RoomGameType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.OtherPlayerCancelReadyRequest), global::QiLieGuaner.OtherPlayerCancelReadyRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QiLieGuaner.OtherPlayerCancelReadyReceive), global::QiLieGuaner.OtherPlayerCancelReadyReceive.Parser, new[]{ "PlayerGUID", "ChairID", "RoomGameType" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///游戏类型枚举
  /// </summary>
  public enum GameType {
    /// <summary>
    ///UNO游戏
    /// </summary>
    [pbr::OriginalName("UNO")] Uno = 0,
    /// <summary>
    ///黑白棋
    /// </summary>
    [pbr::OriginalName("Othello")] Othello = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  ///创建房间请求
  /// </summary>
  public sealed partial class CreateRoomRequest : pb::IMessage<CreateRoomRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateRoomRequest> _parser = new pb::MessageParser<CreateRoomRequest>(() => new CreateRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomRequest(CreateRoomRequest other) : this() {
      playerGUID_ = other.playerGUID_;
      roomName_ = other.roomName_;
      roomPassword_ = other.roomPassword_;
      gameTypeID_ = other.gameTypeID_;
      gameRule_ = other.gameRule_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomRequest Clone() {
      return new CreateRoomRequest(this);
    }

    /// <summary>Field number for the "playerGUID" field.</summary>
    public const int PlayerGUIDFieldNumber = 1;
    private int playerGUID_;
    /// <summary>
    ///玩家guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerGUID {
      get { return playerGUID_; }
      set {
        playerGUID_ = value;
      }
    }

    /// <summary>Field number for the "roomName" field.</summary>
    public const int RoomNameFieldNumber = 2;
    private string roomName_ = "";
    /// <summary>
    ///房间名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roomPassword" field.</summary>
    public const int RoomPasswordFieldNumber = 3;
    private string roomPassword_ = "";
    /// <summary>
    ///房间密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomPassword {
      get { return roomPassword_; }
      set {
        roomPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameTypeID" field.</summary>
    public const int GameTypeIDFieldNumber = 4;
    private global::QiLieGuaner.GameType gameTypeID_ = global::QiLieGuaner.GameType.Uno;
    /// <summary>
    ///游戏类型ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QiLieGuaner.GameType GameTypeID {
      get { return gameTypeID_; }
      set {
        gameTypeID_ = value;
      }
    }

    /// <summary>Field number for the "gameRule" field.</summary>
    public const int GameRuleFieldNumber = 5;
    private string gameRule_ = "";
    /// <summary>
    ///创建房间时，指定的游戏规则串。配置项顺序与客户端中表顺序一致；每个大项规则之间用‘|’分割，如果是多选则选项之间用‘#’分割
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameRule {
      get { return gameRule_; }
      set {
        gameRule_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGUID != other.PlayerGUID) return false;
      if (RoomName != other.RoomName) return false;
      if (RoomPassword != other.RoomPassword) return false;
      if (GameTypeID != other.GameTypeID) return false;
      if (GameRule != other.GameRule) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGUID != 0) hash ^= PlayerGUID.GetHashCode();
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (RoomPassword.Length != 0) hash ^= RoomPassword.GetHashCode();
      if (GameTypeID != global::QiLieGuaner.GameType.Uno) hash ^= GameTypeID.GetHashCode();
      if (GameRule.Length != 0) hash ^= GameRule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomName);
      }
      if (RoomPassword.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomPassword);
      }
      if (GameTypeID != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(32);
        output.WriteEnum((int) GameTypeID);
      }
      if (GameRule.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GameRule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomName);
      }
      if (RoomPassword.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomPassword);
      }
      if (GameTypeID != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(32);
        output.WriteEnum((int) GameTypeID);
      }
      if (GameRule.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GameRule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerGUID);
      }
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (RoomPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomPassword);
      }
      if (GameTypeID != global::QiLieGuaner.GameType.Uno) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameTypeID);
      }
      if (GameRule.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameRule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGUID != 0) {
        PlayerGUID = other.PlayerGUID;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.RoomPassword.Length != 0) {
        RoomPassword = other.RoomPassword;
      }
      if (other.GameTypeID != global::QiLieGuaner.GameType.Uno) {
        GameTypeID = other.GameTypeID;
      }
      if (other.GameRule.Length != 0) {
        GameRule = other.GameRule;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 18: {
            RoomName = input.ReadString();
            break;
          }
          case 26: {
            RoomPassword = input.ReadString();
            break;
          }
          case 32: {
            GameTypeID = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
          case 42: {
            GameRule = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 18: {
            RoomName = input.ReadString();
            break;
          }
          case 26: {
            RoomPassword = input.ReadString();
            break;
          }
          case 32: {
            GameTypeID = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
          case 42: {
            GameRule = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///创建房间响应
  /// </summary>
  public sealed partial class CreateRoomReceive : pb::IMessage<CreateRoomReceive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateRoomReceive> _parser = new pb::MessageParser<CreateRoomReceive>(() => new CreateRoomReceive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRoomReceive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomReceive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomReceive(CreateRoomReceive other) : this() {
      state_ = other.state_;
      playerGUID_ = other.playerGUID_;
      roomName_ = other.roomName_;
      roomID_ = other.roomID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomReceive Clone() {
      return new CreateRoomReceive(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private int state_;
    /// <summary>
    ///创建房间结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "playerGUID" field.</summary>
    public const int PlayerGUIDFieldNumber = 2;
    private int playerGUID_;
    /// <summary>
    ///创建房间的玩家guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerGUID {
      get { return playerGUID_; }
      set {
        playerGUID_ = value;
      }
    }

    /// <summary>Field number for the "roomName" field.</summary>
    public const int RoomNameFieldNumber = 3;
    private string roomName_ = "";
    /// <summary>
    ///房间名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roomID" field.</summary>
    public const int RoomIDFieldNumber = 4;
    private string roomID_ = "";
    /// <summary>
    ///房间ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomID {
      get { return roomID_; }
      set {
        roomID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRoomReceive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRoomReceive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (PlayerGUID != other.PlayerGUID) return false;
      if (RoomName != other.RoomName) return false;
      if (RoomID != other.RoomID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != 0) hash ^= State.GetHashCode();
      if (PlayerGUID != 0) hash ^= PlayerGUID.GetHashCode();
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (RoomID.Length != 0) hash ^= RoomID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(State);
      }
      if (PlayerGUID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerGUID);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomName);
      }
      if (RoomID.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RoomID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(State);
      }
      if (PlayerGUID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerGUID);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomName);
      }
      if (RoomID.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RoomID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (PlayerGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerGUID);
      }
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (RoomID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRoomReceive other) {
      if (other == null) {
        return;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.PlayerGUID != 0) {
        PlayerGUID = other.PlayerGUID;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.RoomID.Length != 0) {
        RoomID = other.RoomID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 26: {
            RoomName = input.ReadString();
            break;
          }
          case 34: {
            RoomID = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 26: {
            RoomName = input.ReadString();
            break;
          }
          case 34: {
            RoomID = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///房间列表请求
  /// </summary>
  public sealed partial class RoomListRequest : pb::IMessage<RoomListRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomListRequest> _parser = new pb::MessageParser<RoomListRequest>(() => new RoomListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListRequest(RoomListRequest other) : this() {
      playerGUID_ = other.playerGUID_;
      gameType_ = other.gameType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListRequest Clone() {
      return new RoomListRequest(this);
    }

    /// <summary>Field number for the "playerGUID" field.</summary>
    public const int PlayerGUIDFieldNumber = 1;
    private int playerGUID_;
    /// <summary>
    ///发起查询房间列表的玩家guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerGUID {
      get { return playerGUID_; }
      set {
        playerGUID_ = value;
      }
    }

    /// <summary>Field number for the "gameType" field.</summary>
    public const int GameTypeFieldNumber = 2;
    private global::QiLieGuaner.GameType gameType_ = global::QiLieGuaner.GameType.Uno;
    /// <summary>
    ///游戏类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QiLieGuaner.GameType GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGUID != other.PlayerGUID) return false;
      if (GameType != other.GameType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGUID != 0) hash ^= PlayerGUID.GetHashCode();
      if (GameType != global::QiLieGuaner.GameType.Uno) hash ^= GameType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (GameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (GameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerGUID);
      }
      if (GameType != global::QiLieGuaner.GameType.Uno) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomListRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGUID != 0) {
        PlayerGUID = other.PlayerGUID;
      }
      if (other.GameType != global::QiLieGuaner.GameType.Uno) {
        GameType = other.GameType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 16: {
            GameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 16: {
            GameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///房间列表响应
  /// </summary>
  public sealed partial class RoomListReceive : pb::IMessage<RoomListReceive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomListReceive> _parser = new pb::MessageParser<RoomListReceive>(() => new RoomListReceive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomListReceive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListReceive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListReceive(RoomListReceive other) : this() {
      playerGUID_ = other.playerGUID_;
      roomInfoList_ = other.roomInfoList_.Clone();
      roomHasLockList_ = other.roomHasLockList_.Clone();
      gameType_ = other.gameType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListReceive Clone() {
      return new RoomListReceive(this);
    }

    /// <summary>Field number for the "playerGUID" field.</summary>
    public const int PlayerGUIDFieldNumber = 1;
    private int playerGUID_;
    /// <summary>
    ///发起查询房间列表的玩家guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerGUID {
      get { return playerGUID_; }
      set {
        playerGUID_ = value;
      }
    }

    /// <summary>Field number for the "roomInfoList" field.</summary>
    public const int RoomInfoListFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_roomInfoList_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> roomInfoList_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///房间信息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RoomInfoList {
      get { return roomInfoList_; }
    }

    /// <summary>Field number for the "roomHasLockList" field.</summary>
    public const int RoomHasLockListFieldNumber = 3;
    private static readonly pb::FieldCodec<bool> _repeated_roomHasLockList_codec
        = pb::FieldCodec.ForBool(26);
    private readonly pbc::RepeatedField<bool> roomHasLockList_ = new pbc::RepeatedField<bool>();
    /// <summary>
    ///房间是否有锁的列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> RoomHasLockList {
      get { return roomHasLockList_; }
    }

    /// <summary>Field number for the "gameType" field.</summary>
    public const int GameTypeFieldNumber = 4;
    private global::QiLieGuaner.GameType gameType_ = global::QiLieGuaner.GameType.Uno;
    /// <summary>
    ///游戏类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QiLieGuaner.GameType GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomListReceive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomListReceive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGUID != other.PlayerGUID) return false;
      if(!roomInfoList_.Equals(other.roomInfoList_)) return false;
      if(!roomHasLockList_.Equals(other.roomHasLockList_)) return false;
      if (GameType != other.GameType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGUID != 0) hash ^= PlayerGUID.GetHashCode();
      hash ^= roomInfoList_.GetHashCode();
      hash ^= roomHasLockList_.GetHashCode();
      if (GameType != global::QiLieGuaner.GameType.Uno) hash ^= GameType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      roomInfoList_.WriteTo(output, _repeated_roomInfoList_codec);
      roomHasLockList_.WriteTo(output, _repeated_roomHasLockList_codec);
      if (GameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(32);
        output.WriteEnum((int) GameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      roomInfoList_.WriteTo(ref output, _repeated_roomInfoList_codec);
      roomHasLockList_.WriteTo(ref output, _repeated_roomHasLockList_codec);
      if (GameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(32);
        output.WriteEnum((int) GameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerGUID);
      }
      size += roomInfoList_.CalculateSize(_repeated_roomInfoList_codec);
      size += roomHasLockList_.CalculateSize(_repeated_roomHasLockList_codec);
      if (GameType != global::QiLieGuaner.GameType.Uno) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomListReceive other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGUID != 0) {
        PlayerGUID = other.PlayerGUID;
      }
      roomInfoList_.Add(other.roomInfoList_);
      roomHasLockList_.Add(other.roomHasLockList_);
      if (other.GameType != global::QiLieGuaner.GameType.Uno) {
        GameType = other.GameType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 18: {
            roomInfoList_.AddEntriesFrom(input, _repeated_roomInfoList_codec);
            break;
          }
          case 26:
          case 24: {
            roomHasLockList_.AddEntriesFrom(input, _repeated_roomHasLockList_codec);
            break;
          }
          case 32: {
            GameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 18: {
            roomInfoList_.AddEntriesFrom(ref input, _repeated_roomInfoList_codec);
            break;
          }
          case 26:
          case 24: {
            roomHasLockList_.AddEntriesFrom(ref input, _repeated_roomHasLockList_codec);
            break;
          }
          case 32: {
            GameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///加入房间请求
  /// </summary>
  public sealed partial class JoinRoomRequest : pb::IMessage<JoinRoomRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JoinRoomRequest> _parser = new pb::MessageParser<JoinRoomRequest>(() => new JoinRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest(JoinRoomRequest other) : this() {
      playerGUID_ = other.playerGUID_;
      roomID_ = other.roomID_;
      roomPassword_ = other.roomPassword_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest Clone() {
      return new JoinRoomRequest(this);
    }

    /// <summary>Field number for the "playerGUID" field.</summary>
    public const int PlayerGUIDFieldNumber = 1;
    private int playerGUID_;
    /// <summary>
    ///玩家guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerGUID {
      get { return playerGUID_; }
      set {
        playerGUID_ = value;
      }
    }

    /// <summary>Field number for the "roomID" field.</summary>
    public const int RoomIDFieldNumber = 2;
    private string roomID_ = "";
    /// <summary>
    ///房间ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomID {
      get { return roomID_; }
      set {
        roomID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roomPassword" field.</summary>
    public const int RoomPasswordFieldNumber = 3;
    private string roomPassword_ = "";
    /// <summary>
    ///房间密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomPassword {
      get { return roomPassword_; }
      set {
        roomPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGUID != other.PlayerGUID) return false;
      if (RoomID != other.RoomID) return false;
      if (RoomPassword != other.RoomPassword) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGUID != 0) hash ^= PlayerGUID.GetHashCode();
      if (RoomID.Length != 0) hash ^= RoomID.GetHashCode();
      if (RoomPassword.Length != 0) hash ^= RoomPassword.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (RoomID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomID);
      }
      if (RoomPassword.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (RoomID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomID);
      }
      if (RoomPassword.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerGUID);
      }
      if (RoomID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomID);
      }
      if (RoomPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomPassword);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGUID != 0) {
        PlayerGUID = other.PlayerGUID;
      }
      if (other.RoomID.Length != 0) {
        RoomID = other.RoomID;
      }
      if (other.RoomPassword.Length != 0) {
        RoomPassword = other.RoomPassword;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 18: {
            RoomID = input.ReadString();
            break;
          }
          case 26: {
            RoomPassword = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 18: {
            RoomID = input.ReadString();
            break;
          }
          case 26: {
            RoomPassword = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///加入房间响应
  /// </summary>
  public sealed partial class JoinRoomReceive : pb::IMessage<JoinRoomReceive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JoinRoomReceive> _parser = new pb::MessageParser<JoinRoomReceive>(() => new JoinRoomReceive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomReceive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomReceive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomReceive(JoinRoomReceive other) : this() {
      state_ = other.state_;
      gameTypeID_ = other.gameTypeID_;
      roomID_ = other.roomID_;
      roomName_ = other.roomName_;
      playerAmount_ = other.playerAmount_;
      playerChairID_ = other.playerChairID_;
      outCardCountdown_ = other.outCardCountdown_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomReceive Clone() {
      return new JoinRoomReceive(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private int state_;
    /// <summary>
    ///加入UNO房间的结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "gameTypeID" field.</summary>
    public const int GameTypeIDFieldNumber = 2;
    private global::QiLieGuaner.GameType gameTypeID_ = global::QiLieGuaner.GameType.Uno;
    /// <summary>
    ///游戏类型ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QiLieGuaner.GameType GameTypeID {
      get { return gameTypeID_; }
      set {
        gameTypeID_ = value;
      }
    }

    /// <summary>Field number for the "roomID" field.</summary>
    public const int RoomIDFieldNumber = 3;
    private string roomID_ = "";
    /// <summary>
    ///房间ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomID {
      get { return roomID_; }
      set {
        roomID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roomName" field.</summary>
    public const int RoomNameFieldNumber = 4;
    private string roomName_ = "";
    /// <summary>
    ///房间名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerAmount" field.</summary>
    public const int PlayerAmountFieldNumber = 5;
    private int playerAmount_;
    /// <summary>
    ///开始游戏需要的玩家数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerAmount {
      get { return playerAmount_; }
      set {
        playerAmount_ = value;
      }
    }

    /// <summary>Field number for the "playerChairID" field.</summary>
    public const int PlayerChairIDFieldNumber = 6;
    private int playerChairID_;
    /// <summary>
    ///椅子ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerChairID {
      get { return playerChairID_; }
      set {
        playerChairID_ = value;
      }
    }

    /// <summary>Field number for the "outCardCountdown" field.</summary>
    public const int OutCardCountdownFieldNumber = 7;
    private int outCardCountdown_;
    /// <summary>
    ///出牌倒计时
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OutCardCountdown {
      get { return outCardCountdown_; }
      set {
        outCardCountdown_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomReceive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomReceive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (GameTypeID != other.GameTypeID) return false;
      if (RoomID != other.RoomID) return false;
      if (RoomName != other.RoomName) return false;
      if (PlayerAmount != other.PlayerAmount) return false;
      if (PlayerChairID != other.PlayerChairID) return false;
      if (OutCardCountdown != other.OutCardCountdown) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != 0) hash ^= State.GetHashCode();
      if (GameTypeID != global::QiLieGuaner.GameType.Uno) hash ^= GameTypeID.GetHashCode();
      if (RoomID.Length != 0) hash ^= RoomID.GetHashCode();
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (PlayerAmount != 0) hash ^= PlayerAmount.GetHashCode();
      if (PlayerChairID != 0) hash ^= PlayerChairID.GetHashCode();
      if (OutCardCountdown != 0) hash ^= OutCardCountdown.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(State);
      }
      if (GameTypeID != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameTypeID);
      }
      if (RoomID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomID);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RoomName);
      }
      if (PlayerAmount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerAmount);
      }
      if (PlayerChairID != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PlayerChairID);
      }
      if (OutCardCountdown != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(OutCardCountdown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(State);
      }
      if (GameTypeID != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameTypeID);
      }
      if (RoomID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomID);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RoomName);
      }
      if (PlayerAmount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerAmount);
      }
      if (PlayerChairID != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PlayerChairID);
      }
      if (OutCardCountdown != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(OutCardCountdown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (GameTypeID != global::QiLieGuaner.GameType.Uno) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameTypeID);
      }
      if (RoomID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomID);
      }
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (PlayerAmount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerAmount);
      }
      if (PlayerChairID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerChairID);
      }
      if (OutCardCountdown != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutCardCountdown);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomReceive other) {
      if (other == null) {
        return;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.GameTypeID != global::QiLieGuaner.GameType.Uno) {
        GameTypeID = other.GameTypeID;
      }
      if (other.RoomID.Length != 0) {
        RoomID = other.RoomID;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.PlayerAmount != 0) {
        PlayerAmount = other.PlayerAmount;
      }
      if (other.PlayerChairID != 0) {
        PlayerChairID = other.PlayerChairID;
      }
      if (other.OutCardCountdown != 0) {
        OutCardCountdown = other.OutCardCountdown;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = input.ReadInt32();
            break;
          }
          case 16: {
            GameTypeID = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
          case 26: {
            RoomID = input.ReadString();
            break;
          }
          case 34: {
            RoomName = input.ReadString();
            break;
          }
          case 40: {
            PlayerAmount = input.ReadInt32();
            break;
          }
          case 48: {
            PlayerChairID = input.ReadInt32();
            break;
          }
          case 56: {
            OutCardCountdown = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = input.ReadInt32();
            break;
          }
          case 16: {
            GameTypeID = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
          case 26: {
            RoomID = input.ReadString();
            break;
          }
          case 34: {
            RoomName = input.ReadString();
            break;
          }
          case 40: {
            PlayerAmount = input.ReadInt32();
            break;
          }
          case 48: {
            PlayerChairID = input.ReadInt32();
            break;
          }
          case 56: {
            OutCardCountdown = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///退出房间请求
  /// </summary>
  public sealed partial class QuitRoomRequest : pb::IMessage<QuitRoomRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuitRoomRequest> _parser = new pb::MessageParser<QuitRoomRequest>(() => new QuitRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuitRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuitRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuitRoomRequest(QuitRoomRequest other) : this() {
      playerGUID_ = other.playerGUID_;
      roomID_ = other.roomID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuitRoomRequest Clone() {
      return new QuitRoomRequest(this);
    }

    /// <summary>Field number for the "playerGUID" field.</summary>
    public const int PlayerGUIDFieldNumber = 1;
    private int playerGUID_;
    /// <summary>
    ///玩家guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerGUID {
      get { return playerGUID_; }
      set {
        playerGUID_ = value;
      }
    }

    /// <summary>Field number for the "roomID" field.</summary>
    public const int RoomIDFieldNumber = 2;
    private string roomID_ = "";
    /// <summary>
    ///房间ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomID {
      get { return roomID_; }
      set {
        roomID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuitRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuitRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGUID != other.PlayerGUID) return false;
      if (RoomID != other.RoomID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGUID != 0) hash ^= PlayerGUID.GetHashCode();
      if (RoomID.Length != 0) hash ^= RoomID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (RoomID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (RoomID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerGUID);
      }
      if (RoomID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuitRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGUID != 0) {
        PlayerGUID = other.PlayerGUID;
      }
      if (other.RoomID.Length != 0) {
        RoomID = other.RoomID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 18: {
            RoomID = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 18: {
            RoomID = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///退出房间响应
  /// </summary>
  public sealed partial class QuitRoomReceive : pb::IMessage<QuitRoomReceive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuitRoomReceive> _parser = new pb::MessageParser<QuitRoomReceive>(() => new QuitRoomReceive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuitRoomReceive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuitRoomReceive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuitRoomReceive(QuitRoomReceive other) : this() {
      state_ = other.state_;
      playerGUID_ = other.playerGUID_;
      roomGameType_ = other.roomGameType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuitRoomReceive Clone() {
      return new QuitRoomReceive(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private int state_;
    /// <summary>
    ///退出UNO房间的结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "playerGUID" field.</summary>
    public const int PlayerGUIDFieldNumber = 2;
    private int playerGUID_;
    /// <summary>
    ///退出房间的玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerGUID {
      get { return playerGUID_; }
      set {
        playerGUID_ = value;
      }
    }

    /// <summary>Field number for the "roomGameType" field.</summary>
    public const int RoomGameTypeFieldNumber = 3;
    private global::QiLieGuaner.GameType roomGameType_ = global::QiLieGuaner.GameType.Uno;
    /// <summary>
    ///游戏类型ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QiLieGuaner.GameType RoomGameType {
      get { return roomGameType_; }
      set {
        roomGameType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuitRoomReceive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuitRoomReceive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (PlayerGUID != other.PlayerGUID) return false;
      if (RoomGameType != other.RoomGameType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != 0) hash ^= State.GetHashCode();
      if (PlayerGUID != 0) hash ^= PlayerGUID.GetHashCode();
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) hash ^= RoomGameType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(State);
      }
      if (PlayerGUID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerGUID);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(State);
      }
      if (PlayerGUID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerGUID);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (PlayerGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerGUID);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomGameType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuitRoomReceive other) {
      if (other == null) {
        return;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.PlayerGUID != 0) {
        PlayerGUID = other.PlayerGUID;
      }
      if (other.RoomGameType != global::QiLieGuaner.GameType.Uno) {
        RoomGameType = other.RoomGameType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 24: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 24: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///其他玩家加入房间请求
  /// </summary>
  public sealed partial class OtherPlayerJoinRoomRequest : pb::IMessage<OtherPlayerJoinRoomRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OtherPlayerJoinRoomRequest> _parser = new pb::MessageParser<OtherPlayerJoinRoomRequest>(() => new OtherPlayerJoinRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherPlayerJoinRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerJoinRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerJoinRoomRequest(OtherPlayerJoinRoomRequest other) : this() {
      playerGUID_ = other.playerGUID_;
      roomID_ = other.roomID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerJoinRoomRequest Clone() {
      return new OtherPlayerJoinRoomRequest(this);
    }

    /// <summary>Field number for the "playerGUID" field.</summary>
    public const int PlayerGUIDFieldNumber = 1;
    private int playerGUID_;
    /// <summary>
    ///玩家guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerGUID {
      get { return playerGUID_; }
      set {
        playerGUID_ = value;
      }
    }

    /// <summary>Field number for the "roomID" field.</summary>
    public const int RoomIDFieldNumber = 2;
    private string roomID_ = "";
    /// <summary>
    ///房间ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomID {
      get { return roomID_; }
      set {
        roomID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherPlayerJoinRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherPlayerJoinRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGUID != other.PlayerGUID) return false;
      if (RoomID != other.RoomID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGUID != 0) hash ^= PlayerGUID.GetHashCode();
      if (RoomID.Length != 0) hash ^= RoomID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (RoomID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (RoomID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerGUID);
      }
      if (RoomID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherPlayerJoinRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGUID != 0) {
        PlayerGUID = other.PlayerGUID;
      }
      if (other.RoomID.Length != 0) {
        RoomID = other.RoomID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 18: {
            RoomID = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 18: {
            RoomID = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///其他玩家加入房间响应
  /// </summary>
  public sealed partial class OtherPlayerJoinRoomReceive : pb::IMessage<OtherPlayerJoinRoomReceive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OtherPlayerJoinRoomReceive> _parser = new pb::MessageParser<OtherPlayerJoinRoomReceive>(() => new OtherPlayerJoinRoomReceive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherPlayerJoinRoomReceive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerJoinRoomReceive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerJoinRoomReceive(OtherPlayerJoinRoomReceive other) : this() {
      playerName_ = other.playerName_;
      playerGUID_ = other.playerGUID_;
      avatarName_ = other.avatarName_;
      playerScore_ = other.playerScore_;
      playerChairID_ = other.playerChairID_;
      roomGameType_ = other.roomGameType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerJoinRoomReceive Clone() {
      return new OtherPlayerJoinRoomReceive(this);
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 1;
    private string playerName_ = "";
    /// <summary>
    ///加入房间的玩家名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerGUID" field.</summary>
    public const int PlayerGUIDFieldNumber = 2;
    private int playerGUID_;
    /// <summary>
    ///加入房间的玩家GUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerGUID {
      get { return playerGUID_; }
      set {
        playerGUID_ = value;
      }
    }

    /// <summary>Field number for the "avatarName" field.</summary>
    public const int AvatarNameFieldNumber = 3;
    private string avatarName_ = "";
    /// <summary>
    ///加入的玩家头像名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvatarName {
      get { return avatarName_; }
      set {
        avatarName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerScore" field.</summary>
    public const int PlayerScoreFieldNumber = 4;
    private int playerScore_;
    /// <summary>
    ///加入房间的玩家分数（金币）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerScore {
      get { return playerScore_; }
      set {
        playerScore_ = value;
      }
    }

    /// <summary>Field number for the "playerChairID" field.</summary>
    public const int PlayerChairIDFieldNumber = 5;
    private int playerChairID_;
    /// <summary>
    ///加入的玩家座位号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerChairID {
      get { return playerChairID_; }
      set {
        playerChairID_ = value;
      }
    }

    /// <summary>Field number for the "roomGameType" field.</summary>
    public const int RoomGameTypeFieldNumber = 6;
    private global::QiLieGuaner.GameType roomGameType_ = global::QiLieGuaner.GameType.Uno;
    /// <summary>
    ///游戏类型ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QiLieGuaner.GameType RoomGameType {
      get { return roomGameType_; }
      set {
        roomGameType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherPlayerJoinRoomReceive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherPlayerJoinRoomReceive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerName != other.PlayerName) return false;
      if (PlayerGUID != other.PlayerGUID) return false;
      if (AvatarName != other.AvatarName) return false;
      if (PlayerScore != other.PlayerScore) return false;
      if (PlayerChairID != other.PlayerChairID) return false;
      if (RoomGameType != other.RoomGameType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (PlayerGUID != 0) hash ^= PlayerGUID.GetHashCode();
      if (AvatarName.Length != 0) hash ^= AvatarName.GetHashCode();
      if (PlayerScore != 0) hash ^= PlayerScore.GetHashCode();
      if (PlayerChairID != 0) hash ^= PlayerChairID.GetHashCode();
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) hash ^= RoomGameType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerName);
      }
      if (PlayerGUID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerGUID);
      }
      if (AvatarName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AvatarName);
      }
      if (PlayerScore != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerScore);
      }
      if (PlayerChairID != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerChairID);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(48);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerName);
      }
      if (PlayerGUID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerGUID);
      }
      if (AvatarName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AvatarName);
      }
      if (PlayerScore != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerScore);
      }
      if (PlayerChairID != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerChairID);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(48);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (PlayerGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerGUID);
      }
      if (AvatarName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarName);
      }
      if (PlayerScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerScore);
      }
      if (PlayerChairID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerChairID);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomGameType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherPlayerJoinRoomReceive other) {
      if (other == null) {
        return;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.PlayerGUID != 0) {
        PlayerGUID = other.PlayerGUID;
      }
      if (other.AvatarName.Length != 0) {
        AvatarName = other.AvatarName;
      }
      if (other.PlayerScore != 0) {
        PlayerScore = other.PlayerScore;
      }
      if (other.PlayerChairID != 0) {
        PlayerChairID = other.PlayerChairID;
      }
      if (other.RoomGameType != global::QiLieGuaner.GameType.Uno) {
        RoomGameType = other.RoomGameType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerName = input.ReadString();
            break;
          }
          case 16: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 26: {
            AvatarName = input.ReadString();
            break;
          }
          case 32: {
            PlayerScore = input.ReadInt32();
            break;
          }
          case 40: {
            PlayerChairID = input.ReadInt32();
            break;
          }
          case 48: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerName = input.ReadString();
            break;
          }
          case 16: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 26: {
            AvatarName = input.ReadString();
            break;
          }
          case 32: {
            PlayerScore = input.ReadInt32();
            break;
          }
          case 40: {
            PlayerChairID = input.ReadInt32();
            break;
          }
          case 48: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///其他玩家退出房间请求
  /// </summary>
  public sealed partial class OtherPlayerQuitRoomRequest : pb::IMessage<OtherPlayerQuitRoomRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OtherPlayerQuitRoomRequest> _parser = new pb::MessageParser<OtherPlayerQuitRoomRequest>(() => new OtherPlayerQuitRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherPlayerQuitRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerQuitRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerQuitRoomRequest(OtherPlayerQuitRoomRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerQuitRoomRequest Clone() {
      return new OtherPlayerQuitRoomRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherPlayerQuitRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherPlayerQuitRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherPlayerQuitRoomRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///其他玩家退出房间响应
  /// </summary>
  public sealed partial class OtherPlayerQuitRoomReceive : pb::IMessage<OtherPlayerQuitRoomReceive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OtherPlayerQuitRoomReceive> _parser = new pb::MessageParser<OtherPlayerQuitRoomReceive>(() => new OtherPlayerQuitRoomReceive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherPlayerQuitRoomReceive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerQuitRoomReceive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerQuitRoomReceive(OtherPlayerQuitRoomReceive other) : this() {
      chairID_ = other.chairID_;
      playerGUID_ = other.playerGUID_;
      roomGameType_ = other.roomGameType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerQuitRoomReceive Clone() {
      return new OtherPlayerQuitRoomReceive(this);
    }

    /// <summary>Field number for the "chairID" field.</summary>
    public const int ChairIDFieldNumber = 1;
    private int chairID_;
    /// <summary>
    ///退出房间的玩家椅子ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairID {
      get { return chairID_; }
      set {
        chairID_ = value;
      }
    }

    /// <summary>Field number for the "playerGUID" field.</summary>
    public const int PlayerGUIDFieldNumber = 2;
    private int playerGUID_;
    /// <summary>
    ///退出UNO房间的玩家GUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerGUID {
      get { return playerGUID_; }
      set {
        playerGUID_ = value;
      }
    }

    /// <summary>Field number for the "roomGameType" field.</summary>
    public const int RoomGameTypeFieldNumber = 3;
    private global::QiLieGuaner.GameType roomGameType_ = global::QiLieGuaner.GameType.Uno;
    /// <summary>
    ///游戏类型ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QiLieGuaner.GameType RoomGameType {
      get { return roomGameType_; }
      set {
        roomGameType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherPlayerQuitRoomReceive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherPlayerQuitRoomReceive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairID != other.ChairID) return false;
      if (PlayerGUID != other.PlayerGUID) return false;
      if (RoomGameType != other.RoomGameType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairID != 0) hash ^= ChairID.GetHashCode();
      if (PlayerGUID != 0) hash ^= PlayerGUID.GetHashCode();
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) hash ^= RoomGameType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairID);
      }
      if (PlayerGUID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerGUID);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairID);
      }
      if (PlayerGUID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerGUID);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairID);
      }
      if (PlayerGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerGUID);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomGameType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherPlayerQuitRoomReceive other) {
      if (other == null) {
        return;
      }
      if (other.ChairID != 0) {
        ChairID = other.ChairID;
      }
      if (other.PlayerGUID != 0) {
        PlayerGUID = other.PlayerGUID;
      }
      if (other.RoomGameType != global::QiLieGuaner.GameType.Uno) {
        RoomGameType = other.RoomGameType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairID = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 24: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairID = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 24: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///快速加入房间请求
  /// </summary>
  public sealed partial class QuickJoinRoomRequest : pb::IMessage<QuickJoinRoomRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuickJoinRoomRequest> _parser = new pb::MessageParser<QuickJoinRoomRequest>(() => new QuickJoinRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuickJoinRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickJoinRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickJoinRoomRequest(QuickJoinRoomRequest other) : this() {
      playerGUID_ = other.playerGUID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickJoinRoomRequest Clone() {
      return new QuickJoinRoomRequest(this);
    }

    /// <summary>Field number for the "playerGUID" field.</summary>
    public const int PlayerGUIDFieldNumber = 1;
    private int playerGUID_;
    /// <summary>
    ///玩家GUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerGUID {
      get { return playerGUID_; }
      set {
        playerGUID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuickJoinRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuickJoinRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGUID != other.PlayerGUID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGUID != 0) hash ^= PlayerGUID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerGUID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuickJoinRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGUID != 0) {
        PlayerGUID = other.PlayerGUID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///快速加入房间响应
  /// </summary>
  public sealed partial class QuickJoinRoomReceive : pb::IMessage<QuickJoinRoomReceive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuickJoinRoomReceive> _parser = new pb::MessageParser<QuickJoinRoomReceive>(() => new QuickJoinRoomReceive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuickJoinRoomReceive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickJoinRoomReceive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickJoinRoomReceive(QuickJoinRoomReceive other) : this() {
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickJoinRoomReceive Clone() {
      return new QuickJoinRoomReceive(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private int state_;
    /// <summary>
    ///快速加入房间结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuickJoinRoomReceive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuickJoinRoomReceive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuickJoinRoomReceive other) {
      if (other == null) {
        return;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家准备请求
  /// </summary>
  public sealed partial class ReadyRequest : pb::IMessage<ReadyRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadyRequest> _parser = new pb::MessageParser<ReadyRequest>(() => new ReadyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyRequest(ReadyRequest other) : this() {
      playerGUID_ = other.playerGUID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyRequest Clone() {
      return new ReadyRequest(this);
    }

    /// <summary>Field number for the "playerGUID" field.</summary>
    public const int PlayerGUIDFieldNumber = 1;
    private int playerGUID_;
    /// <summary>
    ///玩家GUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerGUID {
      get { return playerGUID_; }
      set {
        playerGUID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGUID != other.PlayerGUID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGUID != 0) hash ^= PlayerGUID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerGUID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadyRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGUID != 0) {
        PlayerGUID = other.PlayerGUID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家准备响应
  /// </summary>
  public sealed partial class ReadyReceive : pb::IMessage<ReadyReceive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadyReceive> _parser = new pb::MessageParser<ReadyReceive>(() => new ReadyReceive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadyReceive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyReceive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyReceive(ReadyReceive other) : this() {
      state_ = other.state_;
      roomGameType_ = other.roomGameType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyReceive Clone() {
      return new ReadyReceive(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private int state_;
    /// <summary>
    ///准备请求的结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "roomGameType" field.</summary>
    public const int RoomGameTypeFieldNumber = 2;
    private global::QiLieGuaner.GameType roomGameType_ = global::QiLieGuaner.GameType.Uno;
    /// <summary>
    ///房间游戏类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QiLieGuaner.GameType RoomGameType {
      get { return roomGameType_; }
      set {
        roomGameType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadyReceive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadyReceive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (RoomGameType != other.RoomGameType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != 0) hash ^= State.GetHashCode();
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) hash ^= RoomGameType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(State);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(State);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomGameType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadyReceive other) {
      if (other == null) {
        return;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.RoomGameType != global::QiLieGuaner.GameType.Uno) {
        RoomGameType = other.RoomGameType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = input.ReadInt32();
            break;
          }
          case 16: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = input.ReadInt32();
            break;
          }
          case 16: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家取消准备请求
  /// </summary>
  public sealed partial class CancelReadyRequest : pb::IMessage<CancelReadyRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelReadyRequest> _parser = new pb::MessageParser<CancelReadyRequest>(() => new CancelReadyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelReadyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelReadyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelReadyRequest(CancelReadyRequest other) : this() {
      playerGUID_ = other.playerGUID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelReadyRequest Clone() {
      return new CancelReadyRequest(this);
    }

    /// <summary>Field number for the "playerGUID" field.</summary>
    public const int PlayerGUIDFieldNumber = 1;
    private int playerGUID_;
    /// <summary>
    ///玩家GUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerGUID {
      get { return playerGUID_; }
      set {
        playerGUID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelReadyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelReadyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGUID != other.PlayerGUID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGUID != 0) hash ^= PlayerGUID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerGUID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelReadyRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGUID != 0) {
        PlayerGUID = other.PlayerGUID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家取消准备响应
  /// </summary>
  public sealed partial class CancelReadyReceive : pb::IMessage<CancelReadyReceive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelReadyReceive> _parser = new pb::MessageParser<CancelReadyReceive>(() => new CancelReadyReceive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelReadyReceive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelReadyReceive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelReadyReceive(CancelReadyReceive other) : this() {
      state_ = other.state_;
      roomGameType_ = other.roomGameType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelReadyReceive Clone() {
      return new CancelReadyReceive(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private int state_;
    /// <summary>
    ///取消准备请求的结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "roomGameType" field.</summary>
    public const int RoomGameTypeFieldNumber = 2;
    private global::QiLieGuaner.GameType roomGameType_ = global::QiLieGuaner.GameType.Uno;
    /// <summary>
    ///房间游戏类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QiLieGuaner.GameType RoomGameType {
      get { return roomGameType_; }
      set {
        roomGameType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelReadyReceive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelReadyReceive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (RoomGameType != other.RoomGameType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != 0) hash ^= State.GetHashCode();
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) hash ^= RoomGameType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(State);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(State);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomGameType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelReadyReceive other) {
      if (other == null) {
        return;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.RoomGameType != global::QiLieGuaner.GameType.Uno) {
        RoomGameType = other.RoomGameType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = input.ReadInt32();
            break;
          }
          case 16: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = input.ReadInt32();
            break;
          }
          case 16: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///游戏开始请求
  /// </summary>
  public sealed partial class StartGameRequest : pb::IMessage<StartGameRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StartGameRequest> _parser = new pb::MessageParser<StartGameRequest>(() => new StartGameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartGameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameRequest(StartGameRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameRequest Clone() {
      return new StartGameRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartGameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartGameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartGameRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///游戏开始响应
  /// </summary>
  public sealed partial class StartGameReceive : pb::IMessage<StartGameReceive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StartGameReceive> _parser = new pb::MessageParser<StartGameReceive>(() => new StartGameReceive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartGameReceive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameReceive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameReceive(StartGameReceive other) : this() {
      time_ = other.time_;
      startGameInfo_ = other.startGameInfo_;
      roomGameType_ = other.roomGameType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameReceive Clone() {
      return new StartGameReceive(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private long time_;
    /// <summary>
    ///游戏开始时的时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "startGameInfo" field.</summary>
    public const int StartGameInfoFieldNumber = 2;
    private string startGameInfo_ = "";
    /// <summary>
    ///游戏开始时提供的参数串
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartGameInfo {
      get { return startGameInfo_; }
      set {
        startGameInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roomGameType" field.</summary>
    public const int RoomGameTypeFieldNumber = 3;
    private global::QiLieGuaner.GameType roomGameType_ = global::QiLieGuaner.GameType.Uno;
    /// <summary>
    ///房间游戏类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QiLieGuaner.GameType RoomGameType {
      get { return roomGameType_; }
      set {
        roomGameType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartGameReceive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartGameReceive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Time != other.Time) return false;
      if (StartGameInfo != other.StartGameInfo) return false;
      if (RoomGameType != other.RoomGameType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time != 0L) hash ^= Time.GetHashCode();
      if (StartGameInfo.Length != 0) hash ^= StartGameInfo.GetHashCode();
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) hash ^= RoomGameType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Time != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Time);
      }
      if (StartGameInfo.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StartGameInfo);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Time != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Time);
      }
      if (StartGameInfo.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StartGameInfo);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
      }
      if (StartGameInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartGameInfo);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomGameType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartGameReceive other) {
      if (other == null) {
        return;
      }
      if (other.Time != 0L) {
        Time = other.Time;
      }
      if (other.StartGameInfo.Length != 0) {
        StartGameInfo = other.StartGameInfo;
      }
      if (other.RoomGameType != global::QiLieGuaner.GameType.Uno) {
        RoomGameType = other.RoomGameType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Time = input.ReadInt64();
            break;
          }
          case 18: {
            StartGameInfo = input.ReadString();
            break;
          }
          case 24: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Time = input.ReadInt64();
            break;
          }
          case 18: {
            StartGameInfo = input.ReadString();
            break;
          }
          case 24: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///游戏结束请求
  /// </summary>
  public sealed partial class GameOverRequest : pb::IMessage<GameOverRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameOverRequest> _parser = new pb::MessageParser<GameOverRequest>(() => new GameOverRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameOverRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameOverRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameOverRequest(GameOverRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameOverRequest Clone() {
      return new GameOverRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameOverRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameOverRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameOverRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///游戏结束响应
  /// </summary>
  public sealed partial class GameOverReceive : pb::IMessage<GameOverReceive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameOverReceive> _parser = new pb::MessageParser<GameOverReceive>(() => new GameOverReceive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameOverReceive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameOverReceive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameOverReceive(GameOverReceive other) : this() {
      winPlayer_ = other.winPlayer_;
      roomName_ = other.roomName_;
      roomID_ = other.roomID_;
      time_ = other.time_;
      playerCount_ = other.playerCount_;
      playerNameList_ = other.playerNameList_.Clone();
      playerIDList_ = other.playerIDList_.Clone();
      changeGoldCoinList_ = other.changeGoldCoinList_.Clone();
      roomGameType_ = other.roomGameType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameOverReceive Clone() {
      return new GameOverReceive(this);
    }

    /// <summary>Field number for the "winPlayer" field.</summary>
    public const int WinPlayerFieldNumber = 1;
    private int winPlayer_;
    /// <summary>
    ///玩家GUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WinPlayer {
      get { return winPlayer_; }
      set {
        winPlayer_ = value;
      }
    }

    /// <summary>Field number for the "roomName" field.</summary>
    public const int RoomNameFieldNumber = 2;
    private string roomName_ = "";
    /// <summary>
    ///房间名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roomID" field.</summary>
    public const int RoomIDFieldNumber = 3;
    private string roomID_ = "";
    /// <summary>
    ///房间ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomID {
      get { return roomID_; }
      set {
        roomID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 4;
    private long time_;
    /// <summary>
    ///对战时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "playerCount" field.</summary>
    public const int PlayerCountFieldNumber = 5;
    private int playerCount_;
    /// <summary>
    ///房间内玩家数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerCount {
      get { return playerCount_; }
      set {
        playerCount_ = value;
      }
    }

    /// <summary>Field number for the "playerNameList" field.</summary>
    public const int PlayerNameListFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_playerNameList_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> playerNameList_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///玩家名称列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> PlayerNameList {
      get { return playerNameList_; }
    }

    /// <summary>Field number for the "playerIDList" field.</summary>
    public const int PlayerIDListFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_playerIDList_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> playerIDList_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///玩家ID列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PlayerIDList {
      get { return playerIDList_; }
    }

    /// <summary>Field number for the "changeGoldCoinList" field.</summary>
    public const int ChangeGoldCoinListFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_changeGoldCoinList_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> changeGoldCoinList_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///金币变动列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ChangeGoldCoinList {
      get { return changeGoldCoinList_; }
    }

    /// <summary>Field number for the "roomGameType" field.</summary>
    public const int RoomGameTypeFieldNumber = 9;
    private global::QiLieGuaner.GameType roomGameType_ = global::QiLieGuaner.GameType.Uno;
    /// <summary>
    ///房间游戏类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QiLieGuaner.GameType RoomGameType {
      get { return roomGameType_; }
      set {
        roomGameType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameOverReceive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameOverReceive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WinPlayer != other.WinPlayer) return false;
      if (RoomName != other.RoomName) return false;
      if (RoomID != other.RoomID) return false;
      if (Time != other.Time) return false;
      if (PlayerCount != other.PlayerCount) return false;
      if(!playerNameList_.Equals(other.playerNameList_)) return false;
      if(!playerIDList_.Equals(other.playerIDList_)) return false;
      if(!changeGoldCoinList_.Equals(other.changeGoldCoinList_)) return false;
      if (RoomGameType != other.RoomGameType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WinPlayer != 0) hash ^= WinPlayer.GetHashCode();
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (RoomID.Length != 0) hash ^= RoomID.GetHashCode();
      if (Time != 0L) hash ^= Time.GetHashCode();
      if (PlayerCount != 0) hash ^= PlayerCount.GetHashCode();
      hash ^= playerNameList_.GetHashCode();
      hash ^= playerIDList_.GetHashCode();
      hash ^= changeGoldCoinList_.GetHashCode();
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) hash ^= RoomGameType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WinPlayer != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WinPlayer);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomName);
      }
      if (RoomID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomID);
      }
      if (Time != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Time);
      }
      if (PlayerCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerCount);
      }
      playerNameList_.WriteTo(output, _repeated_playerNameList_codec);
      playerIDList_.WriteTo(output, _repeated_playerIDList_codec);
      changeGoldCoinList_.WriteTo(output, _repeated_changeGoldCoinList_codec);
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(72);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WinPlayer != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WinPlayer);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomName);
      }
      if (RoomID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomID);
      }
      if (Time != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Time);
      }
      if (PlayerCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerCount);
      }
      playerNameList_.WriteTo(ref output, _repeated_playerNameList_codec);
      playerIDList_.WriteTo(ref output, _repeated_playerIDList_codec);
      changeGoldCoinList_.WriteTo(ref output, _repeated_changeGoldCoinList_codec);
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(72);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WinPlayer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinPlayer);
      }
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (RoomID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomID);
      }
      if (Time != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
      }
      if (PlayerCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerCount);
      }
      size += playerNameList_.CalculateSize(_repeated_playerNameList_codec);
      size += playerIDList_.CalculateSize(_repeated_playerIDList_codec);
      size += changeGoldCoinList_.CalculateSize(_repeated_changeGoldCoinList_codec);
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomGameType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameOverReceive other) {
      if (other == null) {
        return;
      }
      if (other.WinPlayer != 0) {
        WinPlayer = other.WinPlayer;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.RoomID.Length != 0) {
        RoomID = other.RoomID;
      }
      if (other.Time != 0L) {
        Time = other.Time;
      }
      if (other.PlayerCount != 0) {
        PlayerCount = other.PlayerCount;
      }
      playerNameList_.Add(other.playerNameList_);
      playerIDList_.Add(other.playerIDList_);
      changeGoldCoinList_.Add(other.changeGoldCoinList_);
      if (other.RoomGameType != global::QiLieGuaner.GameType.Uno) {
        RoomGameType = other.RoomGameType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WinPlayer = input.ReadInt32();
            break;
          }
          case 18: {
            RoomName = input.ReadString();
            break;
          }
          case 26: {
            RoomID = input.ReadString();
            break;
          }
          case 32: {
            Time = input.ReadInt64();
            break;
          }
          case 40: {
            PlayerCount = input.ReadInt32();
            break;
          }
          case 50: {
            playerNameList_.AddEntriesFrom(input, _repeated_playerNameList_codec);
            break;
          }
          case 58:
          case 56: {
            playerIDList_.AddEntriesFrom(input, _repeated_playerIDList_codec);
            break;
          }
          case 66:
          case 64: {
            changeGoldCoinList_.AddEntriesFrom(input, _repeated_changeGoldCoinList_codec);
            break;
          }
          case 72: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WinPlayer = input.ReadInt32();
            break;
          }
          case 18: {
            RoomName = input.ReadString();
            break;
          }
          case 26: {
            RoomID = input.ReadString();
            break;
          }
          case 32: {
            Time = input.ReadInt64();
            break;
          }
          case 40: {
            PlayerCount = input.ReadInt32();
            break;
          }
          case 50: {
            playerNameList_.AddEntriesFrom(ref input, _repeated_playerNameList_codec);
            break;
          }
          case 58:
          case 56: {
            playerIDList_.AddEntriesFrom(ref input, _repeated_playerIDList_codec);
            break;
          }
          case 66:
          case 64: {
            changeGoldCoinList_.AddEntriesFrom(ref input, _repeated_changeGoldCoinList_codec);
            break;
          }
          case 72: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///其他玩家准备请求
  /// </summary>
  public sealed partial class OtherPlayerReadyRequest : pb::IMessage<OtherPlayerReadyRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OtherPlayerReadyRequest> _parser = new pb::MessageParser<OtherPlayerReadyRequest>(() => new OtherPlayerReadyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherPlayerReadyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerReadyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerReadyRequest(OtherPlayerReadyRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerReadyRequest Clone() {
      return new OtherPlayerReadyRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherPlayerReadyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherPlayerReadyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherPlayerReadyRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///其他玩家准备响应
  /// </summary>
  public sealed partial class OtherPlayerReadyReceive : pb::IMessage<OtherPlayerReadyReceive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OtherPlayerReadyReceive> _parser = new pb::MessageParser<OtherPlayerReadyReceive>(() => new OtherPlayerReadyReceive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherPlayerReadyReceive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerReadyReceive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerReadyReceive(OtherPlayerReadyReceive other) : this() {
      playerGUID_ = other.playerGUID_;
      chairID_ = other.chairID_;
      roomGameType_ = other.roomGameType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerReadyReceive Clone() {
      return new OtherPlayerReadyReceive(this);
    }

    /// <summary>Field number for the "playerGUID" field.</summary>
    public const int PlayerGUIDFieldNumber = 1;
    private int playerGUID_;
    /// <summary>
    ///玩家GUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerGUID {
      get { return playerGUID_; }
      set {
        playerGUID_ = value;
      }
    }

    /// <summary>Field number for the "chairID" field.</summary>
    public const int ChairIDFieldNumber = 2;
    private int chairID_;
    /// <summary>
    ///玩家座位ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairID {
      get { return chairID_; }
      set {
        chairID_ = value;
      }
    }

    /// <summary>Field number for the "roomGameType" field.</summary>
    public const int RoomGameTypeFieldNumber = 3;
    private global::QiLieGuaner.GameType roomGameType_ = global::QiLieGuaner.GameType.Uno;
    /// <summary>
    ///房间游戏类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QiLieGuaner.GameType RoomGameType {
      get { return roomGameType_; }
      set {
        roomGameType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherPlayerReadyReceive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherPlayerReadyReceive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGUID != other.PlayerGUID) return false;
      if (ChairID != other.ChairID) return false;
      if (RoomGameType != other.RoomGameType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGUID != 0) hash ^= PlayerGUID.GetHashCode();
      if (ChairID != 0) hash ^= ChairID.GetHashCode();
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) hash ^= RoomGameType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (ChairID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChairID);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (ChairID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChairID);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerGUID);
      }
      if (ChairID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairID);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomGameType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherPlayerReadyReceive other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGUID != 0) {
        PlayerGUID = other.PlayerGUID;
      }
      if (other.ChairID != 0) {
        ChairID = other.ChairID;
      }
      if (other.RoomGameType != global::QiLieGuaner.GameType.Uno) {
        RoomGameType = other.RoomGameType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 16: {
            ChairID = input.ReadInt32();
            break;
          }
          case 24: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 16: {
            ChairID = input.ReadInt32();
            break;
          }
          case 24: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///其他玩家取消准备请求
  /// </summary>
  public sealed partial class OtherPlayerCancelReadyRequest : pb::IMessage<OtherPlayerCancelReadyRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OtherPlayerCancelReadyRequest> _parser = new pb::MessageParser<OtherPlayerCancelReadyRequest>(() => new OtherPlayerCancelReadyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherPlayerCancelReadyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerCancelReadyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerCancelReadyRequest(OtherPlayerCancelReadyRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerCancelReadyRequest Clone() {
      return new OtherPlayerCancelReadyRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherPlayerCancelReadyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherPlayerCancelReadyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherPlayerCancelReadyRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///其他玩家取消准备响应
  /// </summary>
  public sealed partial class OtherPlayerCancelReadyReceive : pb::IMessage<OtherPlayerCancelReadyReceive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OtherPlayerCancelReadyReceive> _parser = new pb::MessageParser<OtherPlayerCancelReadyReceive>(() => new OtherPlayerCancelReadyReceive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherPlayerCancelReadyReceive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QiLieGuaner.MsgRoomReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerCancelReadyReceive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerCancelReadyReceive(OtherPlayerCancelReadyReceive other) : this() {
      playerGUID_ = other.playerGUID_;
      chairID_ = other.chairID_;
      roomGameType_ = other.roomGameType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherPlayerCancelReadyReceive Clone() {
      return new OtherPlayerCancelReadyReceive(this);
    }

    /// <summary>Field number for the "playerGUID" field.</summary>
    public const int PlayerGUIDFieldNumber = 1;
    private int playerGUID_;
    /// <summary>
    ///玩家GUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerGUID {
      get { return playerGUID_; }
      set {
        playerGUID_ = value;
      }
    }

    /// <summary>Field number for the "chairID" field.</summary>
    public const int ChairIDFieldNumber = 2;
    private int chairID_;
    /// <summary>
    ///玩家座位ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairID {
      get { return chairID_; }
      set {
        chairID_ = value;
      }
    }

    /// <summary>Field number for the "roomGameType" field.</summary>
    public const int RoomGameTypeFieldNumber = 3;
    private global::QiLieGuaner.GameType roomGameType_ = global::QiLieGuaner.GameType.Uno;
    /// <summary>
    ///房间游戏类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QiLieGuaner.GameType RoomGameType {
      get { return roomGameType_; }
      set {
        roomGameType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherPlayerCancelReadyReceive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherPlayerCancelReadyReceive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGUID != other.PlayerGUID) return false;
      if (ChairID != other.ChairID) return false;
      if (RoomGameType != other.RoomGameType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGUID != 0) hash ^= PlayerGUID.GetHashCode();
      if (ChairID != 0) hash ^= ChairID.GetHashCode();
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) hash ^= RoomGameType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (ChairID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChairID);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerGUID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerGUID);
      }
      if (ChairID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChairID);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RoomGameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerGUID);
      }
      if (ChairID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairID);
      }
      if (RoomGameType != global::QiLieGuaner.GameType.Uno) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomGameType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherPlayerCancelReadyReceive other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGUID != 0) {
        PlayerGUID = other.PlayerGUID;
      }
      if (other.ChairID != 0) {
        ChairID = other.ChairID;
      }
      if (other.RoomGameType != global::QiLieGuaner.GameType.Uno) {
        RoomGameType = other.RoomGameType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 16: {
            ChairID = input.ReadInt32();
            break;
          }
          case 24: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerGUID = input.ReadInt32();
            break;
          }
          case 16: {
            ChairID = input.ReadInt32();
            break;
          }
          case 24: {
            RoomGameType = (global::QiLieGuaner.GameType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
