//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ResourcesManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ResourcesManager), typeof(MonoSingleton<ResourcesManager>));
		L.RegFunction("GetFontResourcesStructFromType", GetFontResourcesStructFromType);
		L.RegFunction("AddAssetBundle", AddAssetBundle);
		L.RegFunction("LoadPrefabFromAssetBundle", LoadPrefabFromAssetBundle);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFontResourcesStructFromType(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ResourcesManager obj = (ResourcesManager)ToLua.CheckObject<ResourcesManager>(L, 1);
			FontResourcesEnum arg0 = (FontResourcesEnum)ToLua.CheckObject(L, 2, typeof(FontResourcesEnum));
			FontResourcesStruct o = obj.GetFontResourcesStructFromType(arg0);
			ToLua.PushValue(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddAssetBundle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ResourcesManager obj = (ResourcesManager)ToLua.CheckObject<ResourcesManager>(L, 1);
			System.Collections.Generic.List<UnityEngine.AssetBundle> arg0 = (System.Collections.Generic.List<UnityEngine.AssetBundle>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.AssetBundle>));
			obj.AddAssetBundle(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadPrefabFromAssetBundle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ResourcesManager obj = (ResourcesManager)ToLua.CheckObject<ResourcesManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			UnityEngine.GameObject o = obj.LoadPrefabFromAssetBundle(arg0, arg1);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

