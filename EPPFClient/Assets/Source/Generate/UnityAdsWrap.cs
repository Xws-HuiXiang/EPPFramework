//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityAdsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityAds), typeof(System.Object));
		L.RegFunction("OnUnityAdsReady", OnUnityAdsReady);
		L.RegFunction("OnUnityAdsDidError", OnUnityAdsDidError);
		L.RegFunction("OnUnityAdsDidStart", OnUnityAdsDidStart);
		L.RegFunction("OnUnityAdsDidFinish", OnUnityAdsDidFinish);
		L.RegFunction("Show", Show);
		L.RegFunction("AddUnityAdsReadyEvent", AddUnityAdsReadyEvent);
		L.RegFunction("RemoveUnityAdsReadyEvent", RemoveUnityAdsReadyEvent);
		L.RegFunction("AddUnityAdsDidErrorEvent", AddUnityAdsDidErrorEvent);
		L.RegFunction("RemoveUnityAdsDidErrorEvent", RemoveUnityAdsDidErrorEvent);
		L.RegFunction("AddUnityAdsDidStartEvent", AddUnityAdsDidStartEvent);
		L.RegFunction("RemoveUnityAdsDidStartEvent", RemoveUnityAdsDidStartEvent);
		L.RegFunction("AddUnityAdsDidFinishFailedEvent", AddUnityAdsDidFinishFailedEvent);
		L.RegFunction("RemoveUnityAdsDidFinishFailedEvent", RemoveUnityAdsDidFinishFailedEvent);
		L.RegFunction("AddUnityAdsDidFinishSkippedEvent", AddUnityAdsDidFinishSkippedEvent);
		L.RegFunction("RemoveUnityAdsDidFinishSkippedEvent", RemoveUnityAdsDidFinishSkippedEvent);
		L.RegFunction("AddUnityAdsDidFinishFinishedEvent", AddUnityAdsDidFinishFinishedEvent);
		L.RegFunction("RemoveUnityAdsDidFinishFinishedEvent", RemoveUnityAdsDidFinishFinishedEvent);
		L.RegFunction("AddAdsIsReadyEvent", AddAdsIsReadyEvent);
		L.RegFunction("RemoveIsReadyEvent", RemoveIsReadyEvent);
		L.RegFunction("AddAdsIsNotReadyEvent", AddAdsIsNotReadyEvent);
		L.RegFunction("RemoveAdsIsNotReadyEvent", RemoveAdsIsNotReadyEvent);
		L.RegFunction("New", _CreateUnityAds);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("CanShow", get_CanShow, null);
		L.RegVar("UnityAdsReadyEvent", get_UnityAdsReadyEvent, set_UnityAdsReadyEvent);
		L.RegVar("UnityAdsDidErrorEvent", get_UnityAdsDidErrorEvent, set_UnityAdsDidErrorEvent);
		L.RegVar("UnityAdsDidStartEvent", get_UnityAdsDidStartEvent, set_UnityAdsDidStartEvent);
		L.RegVar("UnityAdsDidFinishFailedEvent", get_UnityAdsDidFinishFailedEvent, set_UnityAdsDidFinishFailedEvent);
		L.RegVar("UnityAdsDidFinishSkippedEvent", get_UnityAdsDidFinishSkippedEvent, set_UnityAdsDidFinishSkippedEvent);
		L.RegVar("UnityAdsDidFinishFinishedEvent", get_UnityAdsDidFinishFinishedEvent, set_UnityAdsDidFinishFinishedEvent);
		L.RegVar("AdsIsReadyEvent", get_AdsIsReadyEvent, set_AdsIsReadyEvent);
		L.RegVar("AdsIsNotReadyEvent", get_AdsIsNotReadyEvent, set_AdsIsNotReadyEvent);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityAds(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityAds obj = new UnityAds(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityAds.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnUnityAdsReady(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.OnUnityAdsReady(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnUnityAdsDidError(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.OnUnityAdsDidError(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnUnityAdsDidStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.OnUnityAdsDidStart(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnUnityAdsDidFinish(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Advertisements.ShowResult arg1 = (UnityEngine.Advertisements.ShowResult)ToLua.CheckObject(L, 3, typeof(UnityEngine.Advertisements.ShowResult));
			obj.OnUnityAdsDidFinish(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Show(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			obj.Show();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddUnityAdsReadyEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			System.Action<string> arg0 = (System.Action<string>)ToLua.CheckDelegate<System.Action<string>>(L, 2);
			obj.AddUnityAdsReadyEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveUnityAdsReadyEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			System.Action<string> arg0 = (System.Action<string>)ToLua.CheckDelegate<System.Action<string>>(L, 2);
			obj.RemoveUnityAdsReadyEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddUnityAdsDidErrorEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			System.Action<string> arg0 = (System.Action<string>)ToLua.CheckDelegate<System.Action<string>>(L, 2);
			obj.AddUnityAdsDidErrorEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveUnityAdsDidErrorEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			System.Action<string> arg0 = (System.Action<string>)ToLua.CheckDelegate<System.Action<string>>(L, 2);
			obj.RemoveUnityAdsDidErrorEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddUnityAdsDidStartEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			System.Action<string> arg0 = (System.Action<string>)ToLua.CheckDelegate<System.Action<string>>(L, 2);
			obj.AddUnityAdsDidStartEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveUnityAdsDidStartEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			System.Action<string> arg0 = (System.Action<string>)ToLua.CheckDelegate<System.Action<string>>(L, 2);
			obj.RemoveUnityAdsDidStartEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddUnityAdsDidFinishFailedEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			System.Action<string,UnityEngine.Advertisements.ShowResult> arg0 = (System.Action<string,UnityEngine.Advertisements.ShowResult>)ToLua.CheckDelegate<System.Action<string,UnityEngine.Advertisements.ShowResult>>(L, 2);
			obj.AddUnityAdsDidFinishFailedEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveUnityAdsDidFinishFailedEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			System.Action<string,UnityEngine.Advertisements.ShowResult> arg0 = (System.Action<string,UnityEngine.Advertisements.ShowResult>)ToLua.CheckDelegate<System.Action<string,UnityEngine.Advertisements.ShowResult>>(L, 2);
			obj.RemoveUnityAdsDidFinishFailedEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddUnityAdsDidFinishSkippedEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			System.Action<string,UnityEngine.Advertisements.ShowResult> arg0 = (System.Action<string,UnityEngine.Advertisements.ShowResult>)ToLua.CheckDelegate<System.Action<string,UnityEngine.Advertisements.ShowResult>>(L, 2);
			obj.AddUnityAdsDidFinishSkippedEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveUnityAdsDidFinishSkippedEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			System.Action<string,UnityEngine.Advertisements.ShowResult> arg0 = (System.Action<string,UnityEngine.Advertisements.ShowResult>)ToLua.CheckDelegate<System.Action<string,UnityEngine.Advertisements.ShowResult>>(L, 2);
			obj.RemoveUnityAdsDidFinishSkippedEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddUnityAdsDidFinishFinishedEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			System.Action<string,UnityEngine.Advertisements.ShowResult> arg0 = (System.Action<string,UnityEngine.Advertisements.ShowResult>)ToLua.CheckDelegate<System.Action<string,UnityEngine.Advertisements.ShowResult>>(L, 2);
			obj.AddUnityAdsDidFinishFinishedEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveUnityAdsDidFinishFinishedEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			System.Action<string,UnityEngine.Advertisements.ShowResult> arg0 = (System.Action<string,UnityEngine.Advertisements.ShowResult>)ToLua.CheckDelegate<System.Action<string,UnityEngine.Advertisements.ShowResult>>(L, 2);
			obj.RemoveUnityAdsDidFinishFinishedEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddAdsIsReadyEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.AddAdsIsReadyEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveIsReadyEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.RemoveIsReadyEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddAdsIsNotReadyEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.AddAdsIsNotReadyEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAdsIsNotReadyEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityAds obj = (UnityAds)ToLua.CheckObject<UnityAds>(L, 1);
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.RemoveAdsIsNotReadyEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CanShow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityAds obj = (UnityAds)o;
			bool ret = obj.CanShow;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CanShow on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnityAdsReadyEvent(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(System.Action<string>)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnityAdsDidErrorEvent(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(System.Action<string>)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnityAdsDidStartEvent(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(System.Action<string>)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnityAdsDidFinishFailedEvent(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(System.Action<string,UnityEngine.Advertisements.ShowResult>)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnityAdsDidFinishSkippedEvent(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(System.Action<string,UnityEngine.Advertisements.ShowResult>)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnityAdsDidFinishFinishedEvent(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(System.Action<string,UnityEngine.Advertisements.ShowResult>)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AdsIsReadyEvent(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(System.Action)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AdsIsNotReadyEvent(IntPtr L)
	{
		ToLua.Push(L, new EventObject(typeof(System.Action)));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UnityAdsReadyEvent(IntPtr L)
	{
		try
		{
			UnityAds obj = (UnityAds)ToLua.CheckObject(L, 1, typeof(UnityAds));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'UnityAds.UnityAdsReadyEvent' can only appear on the left hand side of += or -= when used outside of the type 'UnityAds'");
			}

			if (arg0.op == EventOp.Add)
			{
				System.Action<string> ev = (System.Action<string>)arg0.func;
				obj.UnityAdsReadyEvent += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				System.Action<string> ev = (System.Action<string>)arg0.func;
				obj.UnityAdsReadyEvent -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UnityAdsDidErrorEvent(IntPtr L)
	{
		try
		{
			UnityAds obj = (UnityAds)ToLua.CheckObject(L, 1, typeof(UnityAds));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'UnityAds.UnityAdsDidErrorEvent' can only appear on the left hand side of += or -= when used outside of the type 'UnityAds'");
			}

			if (arg0.op == EventOp.Add)
			{
				System.Action<string> ev = (System.Action<string>)arg0.func;
				obj.UnityAdsDidErrorEvent += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				System.Action<string> ev = (System.Action<string>)arg0.func;
				obj.UnityAdsDidErrorEvent -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UnityAdsDidStartEvent(IntPtr L)
	{
		try
		{
			UnityAds obj = (UnityAds)ToLua.CheckObject(L, 1, typeof(UnityAds));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'UnityAds.UnityAdsDidStartEvent' can only appear on the left hand side of += or -= when used outside of the type 'UnityAds'");
			}

			if (arg0.op == EventOp.Add)
			{
				System.Action<string> ev = (System.Action<string>)arg0.func;
				obj.UnityAdsDidStartEvent += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				System.Action<string> ev = (System.Action<string>)arg0.func;
				obj.UnityAdsDidStartEvent -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UnityAdsDidFinishFailedEvent(IntPtr L)
	{
		try
		{
			UnityAds obj = (UnityAds)ToLua.CheckObject(L, 1, typeof(UnityAds));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'UnityAds.UnityAdsDidFinishFailedEvent' can only appear on the left hand side of += or -= when used outside of the type 'UnityAds'");
			}

			if (arg0.op == EventOp.Add)
			{
				System.Action<string,UnityEngine.Advertisements.ShowResult> ev = (System.Action<string,UnityEngine.Advertisements.ShowResult>)arg0.func;
				obj.UnityAdsDidFinishFailedEvent += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				System.Action<string,UnityEngine.Advertisements.ShowResult> ev = (System.Action<string,UnityEngine.Advertisements.ShowResult>)arg0.func;
				obj.UnityAdsDidFinishFailedEvent -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UnityAdsDidFinishSkippedEvent(IntPtr L)
	{
		try
		{
			UnityAds obj = (UnityAds)ToLua.CheckObject(L, 1, typeof(UnityAds));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'UnityAds.UnityAdsDidFinishSkippedEvent' can only appear on the left hand side of += or -= when used outside of the type 'UnityAds'");
			}

			if (arg0.op == EventOp.Add)
			{
				System.Action<string,UnityEngine.Advertisements.ShowResult> ev = (System.Action<string,UnityEngine.Advertisements.ShowResult>)arg0.func;
				obj.UnityAdsDidFinishSkippedEvent += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				System.Action<string,UnityEngine.Advertisements.ShowResult> ev = (System.Action<string,UnityEngine.Advertisements.ShowResult>)arg0.func;
				obj.UnityAdsDidFinishSkippedEvent -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UnityAdsDidFinishFinishedEvent(IntPtr L)
	{
		try
		{
			UnityAds obj = (UnityAds)ToLua.CheckObject(L, 1, typeof(UnityAds));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'UnityAds.UnityAdsDidFinishFinishedEvent' can only appear on the left hand side of += or -= when used outside of the type 'UnityAds'");
			}

			if (arg0.op == EventOp.Add)
			{
				System.Action<string,UnityEngine.Advertisements.ShowResult> ev = (System.Action<string,UnityEngine.Advertisements.ShowResult>)arg0.func;
				obj.UnityAdsDidFinishFinishedEvent += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				System.Action<string,UnityEngine.Advertisements.ShowResult> ev = (System.Action<string,UnityEngine.Advertisements.ShowResult>)arg0.func;
				obj.UnityAdsDidFinishFinishedEvent -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AdsIsReadyEvent(IntPtr L)
	{
		try
		{
			UnityAds obj = (UnityAds)ToLua.CheckObject(L, 1, typeof(UnityAds));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'UnityAds.AdsIsReadyEvent' can only appear on the left hand side of += or -= when used outside of the type 'UnityAds'");
			}

			if (arg0.op == EventOp.Add)
			{
				System.Action ev = (System.Action)arg0.func;
				obj.AdsIsReadyEvent += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				System.Action ev = (System.Action)arg0.func;
				obj.AdsIsReadyEvent -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AdsIsNotReadyEvent(IntPtr L)
	{
		try
		{
			UnityAds obj = (UnityAds)ToLua.CheckObject(L, 1, typeof(UnityAds));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'UnityAds.AdsIsNotReadyEvent' can only appear on the left hand side of += or -= when used outside of the type 'UnityAds'");
			}

			if (arg0.op == EventOp.Add)
			{
				System.Action ev = (System.Action)arg0.func;
				obj.AdsIsNotReadyEvent += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				System.Action ev = (System.Action)arg0.func;
				obj.AdsIsNotReadyEvent -= ev;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

