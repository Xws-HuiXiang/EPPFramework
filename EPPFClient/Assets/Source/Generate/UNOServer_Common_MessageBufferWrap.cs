//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UNOServer_Common_MessageBufferWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UNOServer.Common.MessageBuffer), typeof(System.Object));
		L.RegFunction("CheckAndMoveData", CheckAndMoveData);
		L.RegFunction("ReSize", ReSize);
		L.RegFunction("EncodeMsg", EncodeMsg);
		L.RegFunction("DecodeMsg", DecodeMsg);
		L.RegFunction("New", _CreateUNOServer_Common_MessageBuffer);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegConstant("DEFAULT_SIZE", 1024);
		L.RegVar("Data", get_Data, null);
		L.RegVar("ReadIndex", get_ReadIndex, set_ReadIndex);
		L.RegVar("WriteIndex", get_WriteIndex, set_WriteIndex);
		L.RegVar("Capacity", get_Capacity, set_Capacity);
		L.RegVar("Remain", get_Remain, null);
		L.RegVar("Length", get_Length, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUNOServer_Common_MessageBuffer(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UNOServer.Common.MessageBuffer obj = new UNOServer.Common.MessageBuffer();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UNOServer.Common.MessageBuffer.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CheckAndMoveData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UNOServer.Common.MessageBuffer obj = (UNOServer.Common.MessageBuffer)ToLua.CheckObject<UNOServer.Common.MessageBuffer>(L, 1);
			obj.CheckAndMoveData();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReSize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UNOServer.Common.MessageBuffer obj = (UNOServer.Common.MessageBuffer)ToLua.CheckObject<UNOServer.Common.MessageBuffer>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ReSize(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EncodeMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			byte[] arg2 = ToLua.CheckByteBuffer(L, 3);
			byte[] o = UNOServer.Common.MessageBuffer.EncodeMsg(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DecodeMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			UNOServer.Common.MessageBuffer arg0 = (UNOServer.Common.MessageBuffer)ToLua.CheckObject<UNOServer.Common.MessageBuffer>(L, 1);
			byte[] arg1 = ToLua.CheckByteBuffer(L, 2);
			int arg2;
			int arg3;
			byte[] arg4 = null;
			bool o = UNOServer.Common.MessageBuffer.DecodeMsg(arg0, arg1, out arg2, out arg3, out arg4);
			LuaDLL.lua_pushboolean(L, o);
			LuaDLL.lua_pushinteger(L, arg2);
			LuaDLL.lua_pushinteger(L, arg3);
			ToLua.Push(L, arg4);
			return 4;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Data(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UNOServer.Common.MessageBuffer obj = (UNOServer.Common.MessageBuffer)o;
			byte[] ret = obj.Data;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Data on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReadIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UNOServer.Common.MessageBuffer obj = (UNOServer.Common.MessageBuffer)o;
			int ret = obj.ReadIndex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ReadIndex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WriteIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UNOServer.Common.MessageBuffer obj = (UNOServer.Common.MessageBuffer)o;
			int ret = obj.WriteIndex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index WriteIndex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Capacity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UNOServer.Common.MessageBuffer obj = (UNOServer.Common.MessageBuffer)o;
			int ret = obj.Capacity;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Capacity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Remain(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UNOServer.Common.MessageBuffer obj = (UNOServer.Common.MessageBuffer)o;
			int ret = obj.Remain;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Remain on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Length(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UNOServer.Common.MessageBuffer obj = (UNOServer.Common.MessageBuffer)o;
			int ret = obj.Length;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Length on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ReadIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UNOServer.Common.MessageBuffer obj = (UNOServer.Common.MessageBuffer)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ReadIndex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ReadIndex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_WriteIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UNOServer.Common.MessageBuffer obj = (UNOServer.Common.MessageBuffer)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.WriteIndex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index WriteIndex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Capacity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UNOServer.Common.MessageBuffer obj = (UNOServer.Common.MessageBuffer)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Capacity = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Capacity on a nil value");
		}
	}
}

