//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AppConstWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AppConst), typeof(System.Object));
		L.RegFunction("GetDevModeServerFolderName", GetDevModeServerFolderName);
		L.RegFunction("GetPlatformName", GetPlatformName);
		L.RegFunction("GetConfigFileFullPath", GetConfigFileFullPath);
		L.RegFunction("GetPbFileFullPathByURL", GetPbFileFullPathByURL);
		L.RegFunction("New", _CreateAppConst);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("DEVELOPMENT_STRING", get_DEVELOPMENT_STRING, null);
		L.RegVar("RELEASE_STRING", get_RELEASE_STRING, null);
		L.RegVar("ROOT_URL", get_ROOT_URL, null);
		L.RegVar("ResString", get_ResString, null);
		L.RegVar("LuaString", get_LuaString, null);
		L.RegVar("DevMode", get_DevMode, null);
		L.RegVar("LoadLoaclAssetBundle", get_LoadLoaclAssetBundle, null);
		L.RegVar("UseLocalIP", get_UseLocalIP, null);
		L.RegVar("UseDevPort", get_UseDevPort, null);
		L.RegVar("AdsTestMod", get_AdsTestMod, null);
		L.RegVar("IP", get_IP, null);
		L.RegVar("HttpIP", get_HttpIP, null);
		L.RegVar("Port", get_Port, null);
		L.RegVar("HttpRequestPort", get_HttpRequestPort, null);
		L.RegVar("ServerLatestURL", get_ServerLatestURL, null);
		L.RegVar("ServerResURL", get_ServerResURL, null);
		L.RegVar("ServerLuaURL", get_ServerLuaURL, null);
		L.RegVar("ServerConfigURL", get_ServerConfigURL, null);
		L.RegVar("ServerVersionFileURL", get_ServerVersionFileURL, null);
		L.RegVar("SceneNameList", get_SceneNameList, null);
		L.RegVar("LocalResRootFolderPath", get_LocalResRootFolderPath, null);
		L.RegVar("LocalResourceFolderPath", get_LocalResourceFolderPath, null);
		L.RegVar("LocalLuaRootFolderPath", get_LocalLuaRootFolderPath, null);
		L.RegVar("ZipPassword", get_ZipPassword, null);
		L.RegVar("AbPackageKey", get_AbPackageKey, null);
		L.RegVar("AssetBundleSuffix", get_AssetBundleSuffix, null);
		L.RegVar("EncryptionFillSuffix", get_EncryptionFillSuffix, null);
		L.RegVar("ProtoFilePath", get_ProtoFilePath, null);
		L.RegVar("ServerPbFileListURL", get_ServerPbFileListURL, null);
		L.RegVar("ClientMsgPbURL", get_ClientMsgPbURL, null);
		L.RegVar("LocalPrefabPath", get_LocalPrefabPath, null);
		L.RegVar("LoadingTipsRequestURL", get_LoadingTipsRequestURL, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateAppConst(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				AppConst obj = new AppConst();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: AppConst.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDevModeServerFolderName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = AppConst.GetDevModeServerFolderName();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPlatformName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = AppConst.GetPlatformName();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetConfigFileFullPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = AppConst.GetConfigFileFullPath();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPbFileFullPathByURL(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			string o = AppConst.GetPbFileFullPathByURL(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DEVELOPMENT_STRING(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.DEVELOPMENT_STRING);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RELEASE_STRING(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.RELEASE_STRING);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ROOT_URL(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.ROOT_URL);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ResString(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.ResString);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaString(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.LuaString);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DevMode(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, AppConst.DevMode);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LoadLoaclAssetBundle(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, AppConst.LoadLoaclAssetBundle);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UseLocalIP(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, AppConst.UseLocalIP);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UseDevPort(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, AppConst.UseDevPort);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AdsTestMod(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, AppConst.AdsTestMod);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IP(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.IP);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HttpIP(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.HttpIP);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Port(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, AppConst.Port);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HttpRequestPort(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, AppConst.HttpRequestPort);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ServerLatestURL(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.ServerLatestURL);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ServerResURL(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.ServerResURL);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ServerLuaURL(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.ServerLuaURL);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ServerConfigURL(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.ServerConfigURL);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ServerVersionFileURL(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.ServerVersionFileURL);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SceneNameList(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, AppConst.SceneNameList);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LocalResRootFolderPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.LocalResRootFolderPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LocalResourceFolderPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.LocalResourceFolderPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LocalLuaRootFolderPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.LocalLuaRootFolderPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ZipPassword(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.ZipPassword);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AbPackageKey(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.AbPackageKey);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AssetBundleSuffix(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.AssetBundleSuffix);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EncryptionFillSuffix(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.EncryptionFillSuffix);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ProtoFilePath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.ProtoFilePath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ServerPbFileListURL(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.ServerPbFileListURL);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ClientMsgPbURL(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.ClientMsgPbURL);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LocalPrefabPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.LocalPrefabPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LoadingTipsRequestURL(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.LoadingTipsRequestURL);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

