//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AndroidManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AndroidManager), typeof(Singleton<AndroidManager>));
		L.RegFunction("Init", Init);
		L.RegFunction("CopyToClipboard", CopyToClipboard);
		L.RegFunction("MakeToast", MakeToast);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AndroidManager obj = (AndroidManager)ToLua.CheckObject<AndroidManager>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CopyToClipboard(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AndroidManager obj = (AndroidManager)ToLua.CheckObject<AndroidManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string o = obj.CopyToClipboard(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MakeToast(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AndroidManager obj = (AndroidManager)ToLua.CheckObject<AndroidManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.MakeToast(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

